<?xml version="1.0" encoding="utf-8"?>
<developerOrientationDocument
  xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
  xmlns:xlink="http://www.w3.org/1999/xlink">

  <!--
  <summary>
    <para>Optional summary abstract</para>
  </summary>
  -->
  
  <introduction>
    <para>
      	 <legacyBold>DeepEarth Version 1.1 Overview</legacyBold>
    DeepEarth is a mapping control powered by the combination of Microsoft’s Silverlight 2.0 platform and the DeepZoom (MuliScaleImage) control. At its core, it builds on these innovative technologies to provide an architecture for bringing together layers for services, data providers, and your own custom mapping elements together into an impressive user experience. Also featured are in depth examples of how you can leverage Virtual Earth Web Services to take advantage of advanced GIS service functionality. This is what you need to get an interactive, native Silverlight 2.0, map into your application today.</para>
  	<para>	
  	 <legacyBold>DeepEarth Version 1.1 Features</legacyBold>
  	Version 1.1 concentrated on a solid, stable, base platform for us (and you) to build upon. It provides imagery as tile layers, a robust Virtual Earth implementation supporting the official token based tile access and web services. Other features include:  	
	<list class="bullet">
		<listItem>Fully implemented map control with property and event model </listItem>
		<listItem>Fully templated set of map navigation controls</listItem>
		<listItem>Layers for inclusion of Points, LineStrings and Polygons (OGC) </listItem>
		<listItem>Geocoding And Reverse Geocoding (find an address/ finding location) </listItem>
		<listItem>Routing (Finding Directions)</listItem>
		<listItem>Marque zoom selection (default Ctrl-click and drag or from menu toggle) </listItem>
		<listItem>Map rotation </listItem>
	</list>
  	</para>
  </introduction>
  

  <!--<introduction>
    <para>DeepEarth Background</para>
  </introduction>-->

  <!-- <inThisSection>Optional description of content in this section</inThisSection> -->

  <!-- <reference>Optional reference section</reference> -->

  <!-- <relatedSections>Optional related sections info</relatedSections> -->

  <!-- <externalResources>Optional external resources section</externalResources> -->

  <relatedTopics>
    <!-- One or more of the following:
         - A local link
         - An external link
         - A code entity reference

    <link xlink:href="Other Topic's ID">Link text</link>
    <externalLink>
        <linkText>Link text</linkText>
        <linkAlternateText>Optional alternate link text</linkAlternateText>
        <linkUri>URI</linkUri>
    </externalLink>
    <codeEntityReference>API member ID</codeEntityReference>

    Examples:

    <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

    <externalLink>
        <linkText>SHFB on CodePlex</linkText>
        <linkAlternateText>Go to CodePlex</linkAlternateText>
        <linkUri>http://www.codeplex.com/SHFB</linkUri>
    </externalLink>

    <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
    <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
    <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
    <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
    <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
    <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
    <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
    -->
  </relatedTopics>
</developerOrientationDocument>
