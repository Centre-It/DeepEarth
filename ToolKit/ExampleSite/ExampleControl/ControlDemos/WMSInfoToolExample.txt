XAML:

<UserControl x:Class="ExampleControlBing.ControlDemos.WMSInfoToolExample"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:w="clr-namespace:DeepEarth.BingMapsToolkit.Client.Controls;assembly=DeepEarth.BingMapsToolkit.Client.Controls.WMSInfoTool"
	xmlns:m="clr-namespace:Microsoft.Maps.MapControl;assembly=Microsoft.Maps.MapControl">
    <Grid x:Name="LayoutRoot" Background="White">
		<m:Map x:Name="map" CredentialsProvider="{StaticResource MyCredentials}" />
		<w:WMSInfoTool x:Name="wmsinfotool" MapName="map" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="10,10,10,10" />
    </Grid>
</UserControl>

CS:

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Shapes;
using ExampleControlBing.WMSService;
using System.ServiceModel;
using DeepEarth.BingMapsToolkit.Client.Controls;

namespace ExampleControlBing.ControlDemos
{
	public partial class WMSInfoToolExample : UserControl
	{
		public WMSInfoToolExample()
		{
			InitializeComponent();

            wmsinfotool.OnWMSInfoToolRequest += new EventHandler<WMSInfoToolEventArgs>(wmsinfotool_OnWMSInfoToolRequest);
		}

        void wmsinfotool_OnWMSInfoToolRequest(object sender, WMSInfoToolEventArgs e)
        {
            WMSClient.WMSFeatureRequestCompleted += (s, arg)=>
                {
                    List<List<string>> result = new List<List<string>>();

                    List<string> Headers = new List<string>();
                    Headers.Add("Layer");
                    Headers.Add("ID");
                    Headers.Add("Description");
                    Headers.Add("Value");

                    result.Add(Headers);

                    foreach (var item in arg.Result)
                    {
                        List<string> list = new List<string>();
                        list.Add(item.Layer);
                        list.Add(item.ID);
                        list.Add(item.Description);
                        list.Add(item.Value);
                        result.Add(list);
                    }

                    e.OnWMSInfoToolRequestComplete(result);
                };
            WMSClient.WMSFeatureRequestAsync(e.Minx, e.Maxx, e.Miny, e.Maxy, e.X, e.Y, e.Width, e.Height);
        }

        private WMSServiceClient serviceClient;

        private WMSServiceClient WMSClient
        {
            get
            {
                if (null == serviceClient)
                {
                    //Handle http/https; OutOfBrowser is currently supported on the MapControl only for http pages

                    var serviceUri =
                        new UriBuilder("http://" + Application.Current.Host.Source.Host + ":" + Application.Current.Host.Source.Port + "/Services/WMSService.svc");

                    //Create the Service Client

                    serviceClient = new WMSServiceClient();
                    serviceClient.Endpoint.Address = new EndpointAddress(serviceUri.Uri);
                }
                return serviceClient;
            }
        }
	}
}
